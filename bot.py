from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CommandHandler, CallbackContext
import logging
import os

from tensorflow.keras.models import load_model
import cv2
import numpy as np

model = load_model('mushroom_classifier.h5')

mushrooms = [
    ("Мухомор лимонный", "Ядовит"),
    ("Мухомор красный", "Ядовит"),
    ("Мухомор пантерный", "Ядовит"),
    ("Мухомор серо-розовый", "Ядовит (условно съедобен)"),
    ("Перечный дождевик", "Неизвестно"),
    ("Опёнок северный", "Съедобен"),
    ("Гребенчатый рогатик", "Неизвестно"),
    ("Трутовик окаймлённый", "Неизвестно"),
    ("Белый гриб", "Съедобен"),
    ("Боровик сетчатый", "Съедобен"),
    ("Калокера клейкая", "Неизвестно"),
    ("Калицина лимонно-желтая", "Неизвестно"),
    ("Лисичка обыкновенная", "Съедобен"),
    ("Трутовик чешуйчатый", "Неизвестно"),
    ("Цетрария исландская (исландский мох)", "Неизвестно"),
    ("Хлороцибория аэругинасценс", "Неизвестно"),
    ("Хондростереум пурпурный", "Неизвестно"),
    ("Кладония бахромчатая", "Неизвестно"),
    ("Кладония оленья", "Неизвестно"),
    ("Кладония звездчатая", "Неизвестно"),
    ("Говорушка дымчатая", "Ядовит (условно съедобен)"),
    ("Колтриция многолетняя", "Неизвестно"),
    ("Копринеллус рассеянный", "Неизвестно"),
    ("Копринеллус слюдяной", "Неизвестно"),
    ("Навозник серый", "Ядовит (с алкоголем)"),
    ("Навозник белый", "Съедобен"),
    ("Крючковидная кубышка", "Неизвестно"),
    ("Дедалеопсис крепкий", "Неизвестно"),
    ("Дедалеопсис трёхцветный", "Неизвестно"),
    ("Эверния мезоморфа", "Неизвестно"),
    ("Эверния сливовая", "Неизвестно"),
    ("Опёнок зимний", "Съедобен"),
    ("Трутовик настоящий", "Неизвестно"),
    ("Трутовик берёзовый", "Неизвестно"),
    ("Трутовик краснопоясный", "Неизвестно"),
    ("Трутовик плоский", "Неизвестно"),
    ("Графис письменный", "Неизвестно"),
    ("Строчок обыкновенный", "Ядовит (условно съедобен)"),
    ("Строчок гигантский", "Ядовит (условно съедобен)"),
    ("Строчок осенний", "Ядовит"),
    ("Ежовик коралловидный", "Неизвестно"),
    ("Ложнолисичка", "Неизвестно"),
    ("Ложноопёнок серно-жёлтый", "Ядовит"),
    ("Ложноопёнок кирпично-красный", "Ядовит"),
    ("Гипогимния вздутая", "Неизвестно"),
    ("Моховик каштановый", "Съедобен"),
    ("Чага", "Неизвестно"),
    ("Опёнок летний", "Съедобен"),
    ("Рыжик настоящий", "Ядовит (условно съедобен)"),
    ("Груздь войлочный", "Ядовит (условно съедобен)"),
    ("Груздь чёрный", "Ядовит (условно съедобен)"),
    ("Трутовик серно-жёлтый", "Ядовит (условно съедобен)"),
    ("Подберёзовик белоножковый", "Съедобен"),
    ("Подосиновик красный", "Съедобен"),
    ("Подберёзовик обыкновенный", "Съедобен"),
    ("Подосиновик разноцветный", "Съедобен"),
    ("Рядовка лиловоногая", "Съедобен"),
    ("Лобария лёгочная", "Неизвестно"),
    ("Дождевик жемчужный", "Съедобен (молодые плодовые тела)"),
    ("Зонтик пёстрый", "Съедобен"),
    ("Мерулиус студенистый", "Неизвестно"),
    ("Мутинус Равенеля", "Неизвестно"),
    ("Нектрия киноварно-красная", "Неизвестно"),
    ("Панеллюс жёсткий", "Неизвестно"),
    ("Пармелия бороздчатая", "Неизвестно"),
    ("Свинушка тонкая", "Ядовита"),
    ("Пельтигера афтостая", "Неизвестно"),
    ("Пельтигера претекстатая", "Неизвестно"),
    ("Феофизция круглая", "Неизвестно"),
    ("Весёлка обыкновенная", "Ядовита в сыром виде"),
    ("Трутовик ложный", "Неизвестно"),
    ("Трутовик осиновый", "Неизвестно"),
    ("Флебия лучистая", "Неизвестно"),
    ("Фолиота золотистая", "Неизвестно"),
    ("Фолиота чешуйчатая", "Неизвестно"),
    ("Физция приподнятая", "Неизвестно"),
    ("Платизматия голубая", "Неизвестно"),
    ("Вёшенка обыкновенная", "Съедобен"),
    ("Вёшенка лёгочная", "Съедобен"),
    ("Псевдоэверния мохнатая", "Неизвестно"),
    ("Ритизма клёновая", "Неизвестно"),
    ("Саркомикса поздняя", "Неизвестно"),
    ("Саркосцифа австрийская", "Неизвестно"),
    ("Саркосома шаровидная", "Неизвестно"),
    ("Шизофиллум обыкновенный", "Неизвестно"),
    ("Стереум жёстковолосистый", "Неизвестно"),
    ("Строфария сине-зелёная", "Ядовита"),
    ("Маслёнок зернистый", "Съедобен"),
    ("Маслёнок лиственничный", "Съедобен"),
    ("Маслёнок обыкновенный", "Съедобен"),
    ("Траметес жёстковолосистый", "Неизвестно"),
    ("Траметес охряный", "Неизвестно"),
    ("Трутовик разноцветный", "Неизвестно"),
    ("Дрожалка оранжевая", "Неизвестно"),
    ("Трихаптум двоякий", "Неизвестно"),
    ("Трихоломопсис красно-жёлтый", "Ядовит (условно съедобен)"),
    ("Урнула кратеровидная", "Неизвестно"),
    ("Вепрь чешский", "Ядовит (условно съедобен)"),
    ("Вульпицида сосновая", "Неизвестно"),
    ("Ксантория настенная", "Неизвестно"),
]

def preprocess_image(image_path, img_size=256):
    img = cv2.imread(image_path)
    if img is None:
        raise ValueError("Ошибка загрузки изображения! Проверьте путь.")
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    img = cv2.resize(img, (img_size, img_size))
    img = img / 255.0
    img = np.expand_dims(img, axis=0)
    return img

def predict_mushroom(img):
    predictions = model.predict(img)
    predicted_class = np.argmax(predictions)
    confidence = np.max(predictions)

    status = ""
    if mushrooms[predicted_class][1] == "Съедобен":
        status = '✅'
    elif mushrooms[predicted_class][1] == "Неизвестно":
        status = '❓'
    else:
        status = '🔴'

    return f"🍄Название: {mushrooms[predicted_class][0]}\n{status}Статус: {mushrooms[predicted_class][1]}\n📊Уверенность: {confidence:.2%}\n"

logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

SAVE_DIR = "photos"
os.makedirs(SAVE_DIR, exist_ok=True)

async def start(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text("🚀Send mushroom photo to predict🚀")

async def handle_photo(update: Update, context: CallbackContext) -> None:
    photo = update.message.photo[-1]
    file = await context.bot.get_file(photo.file_id)
    file_path = os.path.join(SAVE_DIR, f"{photo.file_id}.jpg")
    await file.download_to_drive(file_path)
    await update.message.reply_text(f"⏳Start predicting the mushroom⏳")
    result = predict_mushroom(preprocess_image(file_path))
    await update.message.reply_text(f"{result}")

async def error_handler(update: object, context: CallbackContext) -> None:
    logger.warning(f"Update {update} caused error {context.error}")

def main():
    TOKEN = "7793479455:AAFr4FyFFne4zF0MkegqGIHBDrSpHIZQe50"
    app = Application.builder().token(TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_error_handler(error_handler)
    
    logger.info("Bot is started!")
    app.run_polling()

if __name__ == "__main__":
    main()
